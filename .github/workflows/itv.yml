name: Update ITV M3U

on:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update_itv_m3u:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download itv.m3u content
        run: curl -L -o itv.m3u https://s.wangqifei.eu.org/itv

      - name: Add timestamp comment
        run: |
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "# Last updated: $timestamp" > itv_with_timestamp.m3u
          cat itv.m3u >> itv_with_timestamp.m3u

      - name: Process itv.m3u file
        run: |
          input_file="itv_with_timestamp.m3u"
          output_file="processed_itv.m3u"
          fps_file="fps.m3u8"
          hevc_file="hevc.m3u8"
          other_file="other.m3u8"

          # Clear temporary files and output file
          > "$output_file"
          > "$fps_file"
          > "$hevc_file"
          > "$other_file"

          # Process and categorize entries using awk
          awk -F'[ ,]' '
            BEGIN {
              # Initialize variables
              entry = ""
            }
            /^#EXTINF/ {
              # Write the previous entry to the appropriate file
              if (entry) {
                if (entry ~ /tvg-name="[^"]*FPS"/) {
                  gsub(/(group-title="[^"]*)"/, "\\1FPS\"", entry)
                  print entry >> ENVIRON["fps_file"]
                } else if (entry ~ /tvg-name="[^"]*HEVC"/) {
                  gsub(/(group-title="[^"]*)"/, "\\1HEVC\"", entry)
                  print entry >> ENVIRON["hevc_file"]
                } else {
                  print entry >> ENVIRON["other_file"]
                }
              }
              # Start a new entry
              entry = $0
            }
            {
              # Continue the current entry
              if (entry) {
                entry = entry "\n" $0
              }
            }
            END {
              # Write the last entry
              if (entry) {
                if (entry ~ /tvg-name="[^"]*FPS"/) {
                  gsub(/(group-title="[^"]*)"/, "\\1FPS\"", entry)
                  print entry >> ENVIRON["fps_file"]
                } else if (entry ~ /tvg-name="[^"]*HEVC"/) {
                  gsub(/(group-title="[^"]*)"/, "\\1HEVC\"", entry)
                  print entry >> ENVIRON["hevc_file"]
                } else {
                  print entry >> ENVIRON["other_file"]
                }
              }
            }
          ' "$input_file"

          # Merge the categorized files into the final output file
          cat "$hevc_file" "$fps_file" "$other_file" >> "$output_file"

          # Remove temporary files
          rm "$fps_file" "$hevc_file" "$other_file"

      - name: Stage changes
        run: |
          echo "Staging changes..."
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          mv processed_itv.m3u itv.m3u  # Replace the original file with the processed file
          git add itv.m3u

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update itv.m3u with timestamp"
          branch: main  # Commit to the main branch
