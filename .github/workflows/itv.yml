name: Update ITV M3U

on:
  schedule:
    - cron: '0 * * * *'  # 每小时运行一次
  workflow_dispatch:  # 允许手动触发

jobs:
  update_itv_m3u:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download itv.m3u content
        run: curl -L -o itv.m3u https://s.wangqifei.eu.org/itv

      - name: Add timestamp comment
        run: |
          timestamp=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          echo "# Last updated: $timestamp" > itv_with_timestamp.m3u
          # Append the contents of the original file
          cat itv.m3u >> itv_with_timestamp.m3u

      - name: Process itv.m3u file
        run: |
          input_file="itv_with_timestamp.m3u"
          output_file="processed_itv.m3u"
          fps_file="fps.m3u8"
          hevc_file="hevc.m3u8"
          other_file="other.m3u8"

          # Clear temporary files and output file
          > "$output_file"
          > "$fps_file"
          > "$hevc_file"
          > "$other_file"

          # Initialize variables
          entry=""
          processing_entry=false
          timestamp_header=false

          while IFS= read -r line; do
              if [[ "$line" =~ ^#Last\ updated ]]; then
                  # Keep the timestamp line as header
                  echo "$line" > "$output_file"
                  timestamp_header=true
              elif [[ "$line" =~ ^#EXTINF ]]; then
                  # Write the previous entry to the appropriate file
                  if $processing_entry; then
                      # Determine which file to write the previous entry to
                      if echo "$entry" | grep -q 'tvg-name="[^"]*FPS"'; then
                          entry=$(echo "$entry" | sed -E 's/(group-title="[^"]*)"/\1FPS"/')
                          echo "$entry" >> "$fps_file"
                      elif echo "$entry" | grep -q 'tvg-name="[^"]*HEVC"'; then
                          entry=$(echo "$entry" | sed -E 's/(group-title="[^"]*)"/\1HEVC"/')
                          echo "$entry" >> "$hevc_file"
                      else
                          echo "$entry" >> "$other_file"
                      fi
                  fi
                  # Start a new entry
                  entry="$line"
                  processing_entry=true
              else
                  # Continue the current entry
                  if $processing_entry; then
                      entry="$entry"$'\n'"$line"
                  fi
              fi
          done < "$input_file"

          # Write the last entry
          if $processing_entry; then
              if echo "$entry" | grep -q 'tvg-name="[^"]*FPS"'; then
                  entry=$(echo "$entry" | sed -E 's/(group-title="[^"]*)"/\1FPS"/')
                  echo "$entry" >> "$fps_file"
              elif echo "$entry" | grep -q 'tvg-name="[^"]*HEVC"'; then
                  entry=$(echo "$entry" | sed -E 's/(group-title="[^"]*)"/\1HEVC"/')
                  echo "$entry" >> "$hevc_file"
              else
                  echo "$entry" >> "$other_file"
              fi
          fi

          # If the timestamp header was added, make sure to include it at the beginning of the output file
          if $timestamp_header; then
              # Merge the categorized files into the final output file
              cat "$hevc_file" "$fps_file" "$other_file" >> "$output_file"
          else
              echo "Timestamp header not found!"
              exit 1
          fi

          # Remove temporary files
          rm "$fps_file" "$hevc_file" "$other_file"

      - name: Stage changes
        run: |
          echo "Staging changes..."
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          mv processed_itv.m3u itv.m3u  # Replace the original file with the processed file
          git add itv.m3u

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Update itv.m3u with timestamp"
          branch: main  # Commit to the main branch